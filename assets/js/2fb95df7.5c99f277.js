"use strict";(self.webpackChunkrn_slick_bottom_tabs=self.webpackChunkrn_slick_bottom_tabs||[]).push([[22],{3905:function(n,t,e){e.d(t,{Zo:function(){return b},kt:function(){return m}});var r=e(7294);function o(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function a(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?a(Object(e),!0).forEach((function(t){o(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function c(n,t){if(null==n)return{};var e,r,o=function(n,t){if(null==n)return{};var e,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)e=a[r],t.indexOf(e)>=0||(o[e]=n[e]);return o}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)e=a[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var s=r.createContext({}),l=function(n){var t=r.useContext(s),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},b=function(n){var t=l(n.components);return r.createElement(s.Provider,{value:t},n.children)},u={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(n,t){var e=n.components,o=n.mdxType,a=n.originalType,s=n.parentName,b=c(n,["components","mdxType","originalType","parentName"]),p=l(e),m=o,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return e?r.createElement(f,i(i({ref:t},b),{},{components:e})):r.createElement(f,i({ref:t},b))}));function m(n,t){var e=arguments,o=t&&t.mdxType;if("string"==typeof n||o){var a=e.length,i=new Array(a);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=n,c.mdxType="string"==typeof n?n:o,i[1]=c;for(var l=2;l<a;l++)i[l]=e[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,e)}p.displayName="MDXCreateElement"},3496:function(n,t,e){e.r(t),e.d(t,{assets:function(){return b},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=e(7462),o=e(3366),a=(e(7294),e(3905)),i=["components"],c={sidebar_position:5},s="SlickTabBarNavigator",l={unversionedId:"tutorial-basics/SlickTabBarNavigator",id:"tutorial-basics/SlickTabBarNavigator",title:"SlickTabBarNavigator",description:"Below is a simple usage or example of one of the react slick bottom tab variants SlickTabBarNavigator",source:"@site/docs/tutorial-basics/SlickTabBarNavigator.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/SlickTabBarNavigator",permalink:"/rn-slick-bottom-tabs/docs/tutorial-basics/SlickTabBarNavigator",editUrl:"https://github.com/orjiace/rn-slick-bottom-tabs/docs/tutorial-basics/SlickTabBarNavigator.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"BerlinTabBarNavigator",permalink:"/rn-slick-bottom-tabs/docs/tutorial-basics/BerlinTabBarNavigator"},next:{title:"Congratulations!",permalink:"/rn-slick-bottom-tabs/docs/tutorial-basics/congratulations"}},b={},u=[],p={toc:u};function m(n){var t=n.components,e=(0,o.Z)(n,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,e,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"slicktabbarnavigator"},"SlickTabBarNavigator"),(0,a.kt)("img",{src:"https://github.com/orjiAce/rn-slick-bottom-tabs/blob/master/ezgif.com-gif-maker%20(2).gif?raw=true",width:"300"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null," ",(0,a.kt)("strong",{parentName:"p"},"Below is a simple usage or example")," of one of the react slick bottom tab variants ",(0,a.kt)("inlineCode",{parentName:"p"},"SlickTabBarNavigator")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/BottomTab.tsx"',title:'"/BottomTab.tsx"'},'import React from \'react\'\nimport {\n    SlickTabBarNavigator,\n    DotSize\n} from \'../components\'\nimport {Ionicons as Icon} from \'@expo/vector-icons\'\nimport TabOne from "../screen/TabOne";\nimport TabTwo from "../screen/TabTwo";\nimport TabThree from "../screen/TabThree";\nimport FourthScreen from "../screen/FourthScreen";\n\nconst Tabs = SlickTabBarNavigator()\n\nconst TabBarIcon = (props: any) => {\n    return (\n        <Icon\n            name={props.name}\n            size={props.size ? props.size : 24}\n            color={props.tintColor}\n        />\n    )\n}\n\nexport default () => (\n    <Tabs.Navigator backBehavior=\'history\'\n    screenOptions={{\n        animation: \'slide_from_right\'\n    }}\n                    initialRouteName="TabOne"\n                     tabBarOptions={{\n                      labelStyle: {fontSize: 12, marginTop: 5, fontWeight: \'bold\'},\n                        activeTintColor: "#7A28CB",\n                        inactiveTintColor: "#9e9e9e",\n                        activeBackgroundColor: "#e5cfff",\n                                       }}\n                         appearance={{\n                          dotSize:DotSize.MEDIUM,\n                          dotCornerRadius:10\n                                       }}\n\n    >\n        <Tabs.Screen\n            name="TabOne"\n            component={TabOne}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="home-sharp"\n                    />\n                ),\n\n            }}\n        />\n\n        <Tabs.Screen\n            name="TabTwo"\n            component={TabTwo}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="person"\n                    />\n                ),\n            }}\n        />\n        <Tabs.Screen\n            name="TabThree"\n            component={TabThree}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="rocket"\n                    />\n                ),\n            }}\n        />\n\n        <Tabs.Screen\n            name="FourthTab"\n            component={FourthScreen}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="ios-notifications"\n                    />\n                ),\n            }}\n        />\n    </Tabs.Navigator>\n)\n\n//On your navigation index\n\n<Stack.Screen name="Root" component={BottomTab} options={{headerShown: true}}/>\n\n\n')))}m.isMDXComponent=!0}}]);