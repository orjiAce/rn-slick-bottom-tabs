"use strict";(self.webpackChunkrn_slick_bottom_tabs=self.webpackChunkrn_slick_bottom_tabs||[]).push([[476],{3905:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return b}});var o=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,o,r=function(n,e){if(null==n)return{};var t,o,r={},a=Object.keys(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)t=a[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=o.createContext({}),p=function(n){var e=o.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=p(n.components);return o.createElement(s.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,s=n.parentName,l=c(n,["components","mdxType","originalType","parentName"]),m=p(t),b=r,f=m["".concat(s,".").concat(b)]||m[b]||u[b]||a;return t?o.createElement(f,i(i({ref:e},l),{},{components:t})):o.createElement(f,i({ref:e},l))}));function b(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=n,c.mdxType="string"==typeof n?n:r,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5022:function(n,e,t){t.r(e),t.d(e,{assets:function(){return l},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],c={sidebar_position:2},s="Usage",p={unversionedId:"Usage",id:"Usage",title:"Usage",description:"Below is a simple usage or example of one of the react slick bottom tab variants JanmTabBarNavigator",source:"@site/docs/Usage.md",sourceDirName:".",slug:"/Usage",permalink:"/rn-slick-bottom-tabs/docs/Usage",editUrl:"https://github.com/orjiace/rn-slick-bottom-tabs/docs/Usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"React Native Slick Bottom Tabs",permalink:"/rn-slick-bottom-tabs/docs/intro"},next:{title:"AceTabBarNavigator",permalink:"/rn-slick-bottom-tabs/docs/tutorial-basics/AceTabBarNavigator"}},l={},u=[],m={toc:u};function b(n){var e=n.components,t=(0,r.Z)(n,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null," ",(0,a.kt)("strong",{parentName:"p"},"Below is a simple usage or example")," of one of the react slick bottom tab variants ",(0,a.kt)("inlineCode",{parentName:"p"},"JanmTabBarNavigator")),(0,a.kt)("img",{src:"https://github.com/orjiAce/rn-slick-bottom-tabs/blob/master/ezgif.com-gif-maker.gif?raw=true",width:"300"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/BottomTab.tsx"',title:'"/BottomTab.tsx"'},'import React from \'react\'\nimport {\n    JanmTabBarNavigator,\n    DotSize\n} from \'../components\'\nimport {Ionicons as Icon} from \'@expo/vector-icons\'\nimport TabOne from "../screen/TabOne";\nimport TabTwo from "../screen/TabTwo";\nimport TabThree from "../screen/TabThree";\nimport FourthScreen from "../screen/FourthScreen";\n\nconst Tabs = JanmTabBarNavigator()\n\nconst TabBarIcon = (props: any) => {\n    return (\n        <Icon\n            name={props.name}\n            size={props.size ? props.size : 24}\n            color={props.tintColor}\n        />\n    )\n}\n\nexport default () => (\n    <Tabs.Navigator backBehavior=\'history\'\n    screenOptions={{\n        animation: \'slide_from_right\'\n    }}\n                    initialRouteName="TabOne"\n                    tabBarOptions={{\n                        activeTintColor: "#7A28CB",\n                        inactiveTintColor: "#9e9e9e",\n                        activeBackgroundColor: "#e5cfff",\n                    }}\n                    appearance={{\n                        dotSize: DotSize.MEDIUM,\n                    }}\n    >\n        <Tabs.Screen\n            name="TabOne"\n            component={TabOne}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="home-sharp"\n                    />\n                ),\n\n            }}\n        />\n\n        <Tabs.Screen\n            name="TabTwo"\n            component={TabTwo}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="person"\n                    />\n                ),\n            }}\n        />\n        <Tabs.Screen\n            name="TabThree"\n            component={TabThree}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="rocket"\n                    />\n                ),\n            }}\n        />\n\n        <Tabs.Screen\n            name="FourthTab"\n            component={FourthScreen}\n            options={{\n                tabBarIcon: ({focused, color}: any) => (\n                    <TabBarIcon\n                        focused={focused}\n                        tintColor={color}\n                        name="ios-notifications"\n                    />\n                ),\n            }}\n        />\n    </Tabs.Navigator>\n)\n\n//On your navigation index\n\n<Stack.Screen name="Root" component={BottomTab} options={{headerShown: true}}/>\n\n\n')))}b.isMDXComponent=!0}}]);